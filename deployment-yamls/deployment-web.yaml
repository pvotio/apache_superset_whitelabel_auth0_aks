apiVersion: apps/v1
kind: Deployment
metadata:
  name: superset-web
  namespace: apps-public
  labels:
    app.kubernetes.io/name: superset-web
    app.kubernetes.io/instance: superset
    app: superset-web
    release: superset
spec:
  replicas: 1
  selector:
    matchLabels:
      app: superset-web
      release: superset
  template:
    metadata:
      labels:
        app.kubernetes.io/name: superset-web
        app.kubernetes.io/instance: superset
        app: superset-web
        release: superset
        azure.workload.identity/use: 'true'       
    spec:
      serviceAccountName: superset
      securityContext:
        runAsUser: 0
#        runAsNonRoot: true
#        runAsUser: 1000
#        runAsGroup: 3000
      initContainers:
      - name: wait-for-postgres
        image: 'xxacrr2sjis.azurecr.io/ext-superset-dockerize:v0.20.4-dockerize'
        imagePullPolicy: 'IfNotPresent'
        command:
        - /bin/sh
        - -c
        - dockerize -wait "tcp://$DB_HOST:$DB_PORT" -timeout 120s
        resources:
          requests:
            cpu: "100m"
            memory: "32Mi"
          limits:
            cpu: "300m"
            memory: "128Mi"
        envFrom:
        - configMapRef:
            name: superset-env
      containers:
      - name: superset
        image: "xxacrr2sjis.azurecr.io/xx-superset:latest"
        imagePullPolicy: Always
        command: ["/bin/sh","-c", ". /app/pythonpath/superset_bootstrap.sh; /usr/bin/run-server.sh"]
        resources:
          requests:
            cpu: "100m"
            memory: "512Mi"
          limits:
            cpu: "1500m"
            memory: "2048Mi"
        env:
          - name: "DB_NAME"
            value: "superset_dev"
          - name: "DB_USER"
            value: "superset_dev_user"
        envFrom:
          - configMapRef:
              name: "superset-env"
        volumeMounts:
          - name: superset-files
            mountPath: "/app/pythonpath"
            readOnly: true
          - name: secrets-store-inline
            mountPath: /var/run/secrets/keyvault
            readOnly: true
        ports:
          - name: http
            containerPort: 8088
            protocol: TCP
        startupProbe:
          failureThreshold: 60
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 15
          successThreshold: 1
          timeoutSeconds: 1
      volumes:
        - name: superset-env
          configMap:
            name: superset-env
        - name: superset-files
          secret:
            secretName: superset-files
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: superset-spc            
